{"ast":null,"code":"var _jsxFileName = \"/home/aurele/MEGA/travail/42Project/transcenAurele/project/front/app/src/popup/popupChat.tsx\",\n  _s = $RefreshSig$();\nimport './popupChat.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst takeMessagesToBack = channelName => {\n  ChannelDescriptor.name = channelName;\n  //////Bonne chance !!\n};\n\nconst sendNewMessageToBack = message => {\n  //////J'me casse !!\n};\nconst sendCommandToBack = message => {\n  //////Chao !!\n};\nconst getMessages = chan => {\n  const messagesRet = [];\n  for (let i = 0; i < chan.listMessage.length; i++) {\n    if (chan.listMessage[i].author === \"\") {\n      messagesRet.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message me\",\n        children: chan.listMessage[i].contain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this));\n    } else {\n      messagesRet.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"de : \" + chan.listMessage[i].author, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message other\",\n          children: chan.listMessage[i].contain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messagePannel\",\n    children: [\" \", messagesRet, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\nvar ChannelDescriptor = {\n  name: \"Salon\",\n  listMessage: [{\n    author: \"\",\n    contain: \"dskdjsj\"\n  }, {\n    author: \"s ddsds\",\n    contain: \"sodjgggg\"\n  }, {\n    author: \"\",\n    contain: \"dsvvvvvvvvvvvvvvvvkdjsj\"\n  }, {\n    author: \"s ddsds\",\n    contain: \"sodjgggggggggggggggggggg\"\n  }]\n};\nconst getChanels = () => {\n  var ListOfChanel = [\"hdh\", \"sdjs\", \"dsdsdssddsddssdds\"];\n\n  //// <<<<<<<<<<<<<<<  The true list\n\n  const chanels = [];\n  for (let i = 0; i < ListOfChanel.length; i++) {\n    chanels.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chanel\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\" + ListOfChanel[i],\n        onClick: () => takeMessagesToBack(ListOfChanel[i]),\n        children: ListOfChanel[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup_list_of_chanel\",\n    children: chanels\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\nconst PopupChat = _ref => {\n  _s();\n  let {\n    onClose\n  } = _ref;\n  const [prompt, setMessage] = useState('');\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n  const sendMessage = () => {\n    console.log(\"message\", prompt);\n    if (prompt.charAt(0) === \"/\") {\n      sendCommandToBack(prompt);\n    } else {\n      sendNewMessageToBack(prompt);\n    }\n    ChannelDescriptor.listMessage.push({\n      author: \"\",\n      contain: prompt\n    });\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup right\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popupchild\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"popup_up\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \" X \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"texte\",\n          children: ChannelDescriptor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup_corps\",\n        children: [getChanels(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [getMessages(ChannelDescriptor), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"input\",\n              placeholder: \"Message \\xE0 envoyer\",\n              value: prompt,\n              onChange: handleMessageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: sendMessage,\n              children: \"Envoyer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(PopupChat, \"7bvIf0DNQIJsQSg9u8ZRXeLmq1Q=\");\n_c = PopupChat;\nexport default PopupChat;\nvar _c;\n$RefreshReg$(_c, \"PopupChat\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","takeMessagesToBack","channelName","ChannelDescriptor","name","sendNewMessageToBack","message","sendCommandToBack","getMessages","chan","messagesRet","i","listMessage","length","author","push","className","children","contain","fileName","_jsxFileName","lineNumber","columnNumber","getChanels","ListOfChanel","chanels","href","onClick","PopupChat","_ref","_s","onClose","prompt","setMessage","handleMessageChange","event","target","value","sendMessage","console","log","charAt","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/aurele/MEGA/travail/42Project/transcenAurele/project/front/app/src/popup/popupChat.tsx"],"sourcesContent":["\nimport './popupChat.css'\nimport { useState } from 'react';\n\ntype PopupProps = {\n  onClose: () => void;\n};\n\ninterface channelsDesc {\n  name: string,\n  listMessage: showMessage[]\n}\n\ninterface showMessage {\n  contain: string,\n  author: string\n}\n\nconst takeMessagesToBack = (channelName:string) => {\n  ChannelDescriptor.name = channelName;\n  //////Bonne chance !!\n}\n\nconst sendNewMessageToBack = (message:string) => {\n    //////J'me casse !!\n}\n\nconst sendCommandToBack = (message:string) => {\n  //////Chao !!\n}\n\nconst getMessages = (chan:channelsDesc) => {\n  const messagesRet = [];\n  for(let i = 0; i < chan.listMessage.length; i++) {\n    \n    if (chan.listMessage[i].author === \"\") {\n      messagesRet.push(\n        <div className=\"message me\">\n          {chan.listMessage[i].contain}\n        </div>\n      )\n    }\n    else {\n      messagesRet.push(\n        <div>\n        {\"de : \" + chan.listMessage[i].author}   \n        <div className=\"message other\">\n          {chan.listMessage[i].contain}\n        </div>\n        </div>\n        )\n      }\n    }\n    return <div className=\"messagePannel\"> {messagesRet} </div>;\n  }\n  \nvar ChannelDescriptor:channelsDesc = {name:\"Salon\", listMessage: [{author: \"\", contain:\"dskdjsj\"}, {author:\"s ddsds\", contain:\"sodjgggg\"},{author: \"\", contain:\"dsvvvvvvvvvvvvvvvvkdjsj\"}, {author:\"s ddsds\", contain:\"sodjgggggggggggggggggggg\"}]}\n\nconst getChanels = () => {\n  var ListOfChanel:string[] = [\"hdh\", \"sdjs\", \"dsdsdssddsddssdds\"];\n  \n  //// <<<<<<<<<<<<<<<  The true list\n\n  const chanels = [];\n  for(let i = 0; i < ListOfChanel.length; i++) {\n    chanels.push(\n        <div className=\"chanel\">\n          <a href={\"#\" + ListOfChanel[i]} onClick={() => takeMessagesToBack(ListOfChanel[i])}>\n            {ListOfChanel[i]}\n          </a>\n        </div>\n    )\n  } \n  return <div className=\"popup_list_of_chanel\">{chanels}</div>\n}\n\n\nconst PopupChat: React.FC<PopupProps> = ({ onClose }) => {\n\n  const [prompt, setMessage] = useState('');\n\n  const handleMessageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessage(event.target.value);\n  };\n\n  const sendMessage = () => {\n    console.log(\"message\", prompt);\n    if (prompt.charAt(0) === \"/\") {\n      sendCommandToBack(prompt);\n    }\n    else {\n      sendNewMessageToBack(prompt);\n    }\n    ChannelDescriptor.listMessage.push({author: \"\", contain: prompt})\n    setMessage('');\n  }\n  \n  return (\n    <div className=\"popup right\">\n      <div className=\"popupchild\">\n        <header className=\"popup_up\">\n          <button className=\"close-button\" onClick={onClose}> X </button>\n          <div className=\"texte\">\n            {ChannelDescriptor.name}\n          </div>\n        </header>\n        <div className=\"popup_corps\">\n          {getChanels()}\n          <div className=\"messages\">\n            {getMessages(ChannelDescriptor)}\n            <div className=\"popup_input\" >\n                <input type=\"input\" placeholder=\"Message Ã  envoyer\"  value={prompt} onChange={handleMessageChange}></input>\n                 <button type=\"submit\" onClick={sendMessage}>\n                     Envoyer\n               </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PopupChat;"],"mappings":";;AACA,OAAO,iBAAiB;AACxB,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBjC,MAAMC,kBAAkB,GAAIC,WAAkB,IAAK;EACjDC,iBAAiB,CAACC,IAAI,GAAGF,WAAW;EACpC;AACF,CAAC;;AAED,MAAMG,oBAAoB,GAAIC,OAAc,IAAK;EAC7C;AAAA,CACH;AAED,MAAMC,iBAAiB,GAAID,OAAc,IAAK;EAC5C;AAAA,CACD;AAED,MAAME,WAAW,GAAIC,IAAiB,IAAK;EACzC,MAAMC,WAAW,GAAG,EAAE;EACtB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,WAAW,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAE/C,IAAIF,IAAI,CAACG,WAAW,CAACD,CAAC,CAAC,CAACG,MAAM,KAAK,EAAE,EAAE;MACrCJ,WAAW,CAACK,IAAI,eACdf,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBR,IAAI,CAACG,WAAW,CAACD,CAAC,CAAC,CAACO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB,CACP;IACH,CAAC,MACI;MACHZ,WAAW,CAACK,IAAI,eACdf,OAAA;QAAAiB,QAAA,GACC,OAAO,GAAGR,IAAI,CAACG,WAAW,CAACD,CAAC,CAAC,CAACG,MAAM,eACrCd,OAAA;UAAKgB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BR,IAAI,CAACG,WAAW,CAACD,CAAC,CAAC,CAACO;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,CACL;IACH;EACF;EACA,oBAAOtB,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,GAAC,GAAC,EAACP,WAAW,EAAC,GAAC;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAC7D,CAAC;AAEH,IAAInB,iBAA8B,GAAG;EAACC,IAAI,EAAC,OAAO;EAAEQ,WAAW,EAAE,CAAC;IAACE,MAAM,EAAE,EAAE;IAAEI,OAAO,EAAC;EAAS,CAAC,EAAE;IAACJ,MAAM,EAAC,SAAS;IAAEI,OAAO,EAAC;EAAU,CAAC,EAAC;IAACJ,MAAM,EAAE,EAAE;IAAEI,OAAO,EAAC;EAAyB,CAAC,EAAE;IAACJ,MAAM,EAAC,SAAS;IAAEI,OAAO,EAAC;EAA0B,CAAC;AAAC,CAAC;AAEnP,MAAMK,UAAU,GAAGA,CAAA,KAAM;EACvB,IAAIC,YAAqB,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,mBAAmB,CAAC;;EAEhE;;EAEA,MAAMC,OAAO,GAAG,EAAE;EAClB,KAAI,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,YAAY,CAACX,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC3Cc,OAAO,CAACV,IAAI,eACRf,OAAA;MAAKgB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBjB,OAAA;QAAG0B,IAAI,EAAE,GAAG,GAAGF,YAAY,CAACb,CAAC,CAAE;QAACgB,OAAO,EAAEA,CAAA,KAAM1B,kBAAkB,CAACuB,YAAY,CAACb,CAAC,CAAC,CAAE;QAAAM,QAAA,EAChFO,YAAY,CAACb,CAAC;MAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACd;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,CACT;EACH;EACA,oBAAOtB,OAAA;IAAKgB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EAAEQ;EAAO;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAC9D,CAAC;AAGD,MAAMM,SAA+B,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAElD,MAAM,CAACG,MAAM,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMoC,mBAAmB,GAAIC,KAA0C,IAAK;IAC1EF,UAAU,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAER,MAAM,CAAC;IAC9B,IAAIA,MAAM,CAACS,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAC5BlC,iBAAiB,CAACyB,MAAM,CAAC;IAC3B,CAAC,MACI;MACH3B,oBAAoB,CAAC2B,MAAM,CAAC;IAC9B;IACA7B,iBAAiB,CAACS,WAAW,CAACG,IAAI,CAAC;MAACD,MAAM,EAAE,EAAE;MAAEI,OAAO,EAAEc;IAAM,CAAC,CAAC;IACjEC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEjC,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BjB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBjB,OAAA;QAAQgB,SAAS,EAAC,UAAU;QAAAC,QAAA,gBAC1BjB,OAAA;UAAQgB,SAAS,EAAC,cAAc;UAACW,OAAO,EAAEI,OAAQ;UAAAd,QAAA,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAC/DtB,OAAA;UAAKgB,SAAS,EAAC,OAAO;UAAAC,QAAA,EACnBd,iBAAiB,CAACC;QAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC,eACTtB,OAAA;QAAKgB,SAAS,EAAC,aAAa;QAAAC,QAAA,GACzBM,UAAU,EAAE,eACbvB,OAAA;UAAKgB,SAAS,EAAC,UAAU;UAAAC,QAAA,GACtBT,WAAW,CAACL,iBAAiB,CAAC,eAC/BH,OAAA;YAAKgB,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACxBjB,OAAA;cAAO0C,IAAI,EAAC,OAAO;cAACC,WAAW,EAAC,sBAAmB;cAAEN,KAAK,EAAEL,MAAO;cAACY,QAAQ,EAAEV;YAAoB;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,eAC1GtB,OAAA;cAAQ0C,IAAI,EAAC,QAAQ;cAACf,OAAO,EAAEW,WAAY;cAAArB,QAAA,EAAC;YAE9C;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACQ,EAAA,CA5CIF,SAA+B;AAAAiB,EAAA,GAA/BjB,SAA+B;AA8CrC,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
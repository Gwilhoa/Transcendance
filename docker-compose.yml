version: "3.9"

services:
  db:
    init: true
    container_name:
      db
    build: 
      context: ./project/sql
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - transnet
    # volumes:
    #   - "transcendance_db:/var/lib/postgresql/data"
    ports:
      - "5432:5432"

  adminer:
    container_name: adminer
    image: adminer
    restart: unless-stopped
    ports:
      - "3215:8080"
    networks:
      - transnet

  back:
    init: true
    ports:
      - "3000:3000"
    container_name:
      back
    depends_on:
      - db
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      APP_ID: ${APP_ID}
      APP_SECRET: ${APP_SECRET}
      APP_REDIRECT_URI: ${APP_REDIRECT_URI}
      JWT_SECRET : ${JWT_SECRET}
    build:
      context: ./project/back
    networks:
      - transnet
    restart: unless-stopped

  front:
    init: true
    container_name:
      front
    depends_on:
      - back
    build:
      context: ./project/front
    networks:
      - transnet
    ports:
      - "8080:8080"


volumes:
  temp:
  transcendance_db:

networks:
  transnet:
    driver: bridge


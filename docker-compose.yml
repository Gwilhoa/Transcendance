version: "3.9"

services:
  db:
    init: true
    container_name:
      db
    build: 
      context: ./project/sql
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - transnet
    volumes:
      - "transcendance_db:/var/lib/postgresql/data"
    ports:
      - "5432:5432"

  back:
    init: true
    ports:
      - "6200:6200"
    container_name:
      back
    depends_on:
      - db
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      APP_ID: ${APP_ID}
      APP_SECRET: ${APP_SECRET}
      APP_REDIRECT_URI: ${APP_REDIRECT_URI}
      JWT_SECRET : ${JWT_SECRET}
    build:
      context: ./project/back
    networks:
      - transnet
    restart: unless-stopped

  front:
    init: true
    container_name:
      front
    depends_on:
      - back
    build:
      context: ./project/front
    networks:
      - transnet
    ports:
      - "3000:3000"
    # volumes:
    #   - temp:/usr/src/app

# volumes:
#   transcendance_db:
#     driver: local
#     driver_opts:
#       type: none
#       device: ./device
#       o: bind
#   temp:
#     driver: local
#     driver_opts:
#       type: none
#       device: ./temp
#       o: bind
#./project/front/ts

volumes:
  temp:
    driver: local
    driver_opts:
       type: none
       device: ./tempfront
       o: bind
       #./project/front/ts
  transcendance_db:
    driver: local
    driver_opts:
      type: none
      device: ./device
      o: bind

networks:
  transnet:
    driver: bridge
